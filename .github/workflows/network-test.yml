name: Mini Network Tests

#on:
  #schedule:
    #- cron:  '0 22 * * *'
#on:
  #push:
    #branches:
      #- nightly_runs_for_latest_test_suite
on: pull_request

env:
  RUST_BACKTRACE: 1
  SN_NODE_VERSION: "0.32.0"
  RUSTFLAGS: "-D warnings"

jobs:
  bash-install-script-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Test safe install script with specific version
        run: |
          ./resources/install.sh --version="0.33.0"
          safe_version=$($HOME/.safe/cli/safe --version | awk '{print $2}')
          if [[ "$safe_version" != "0.33.0" ]]; then
            echo "The install script with the --version option should install the correct version."
            echo "Expected version: 0.33.0"
            echo "Version reported by safe: $safe_version"
            exit 1
          fi
  network-test:
    if: ${{ github.repository_owner == 'maidsafe' }}
    name: E2E against real network
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release
      - name: Setup Safe CLI
        run: |
          mkdir -p $HOME/.safe/cli
          cp ./target/release/safe $HOME/.safe/cli/
          echo "$HOME/.safe/cli" >> $GITHUB_PATH
          echo "$HOME/.safe/node" >> $GITHUB_PATH
          chmod +x $HOME/.safe/cli/safe
      - name: Install specific node version to test against
        run : safe node install --version $SN_NODE_VERSION
      - name: Run network for tests
        run : safe node run-baby-fleming

      - name: Run CLI Tests
        run: ./resources/test-scripts/cli-tests
        shell: bash

      - name: Stop the network on fail
        if: failure()
        run: safe node killall || true && safe auth stop || true

      - name: Failure logs
        if: failure()
        run: tail $HOME/.safe/node/baby-fleming-nodes/*/*.log
